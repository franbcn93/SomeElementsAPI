{"version":3,"sources":["components/Card.js","components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Card","datos","name","capital","region","population","nativeName","languages","flag","currencies","useState","modalStyle","open","setOpen","bandera","guardarBandera","classes","className","style","textAlign","map","el","type","onClick","console","log","Modal","onClose","id","src","Todos","props","state","resultados","error","clickado","handleClick","bind","fetch","then","response","ok","Error","json","resp","setState","catch","e","prevState","text","imagen","this","length","alpha3Code","Component","App","setTodos","fetchApi","a","responseJSON","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f6ba1e1.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport const Card = ({ datos }) => {\n  const {\n    name,\n    capital,\n    region,\n    population,\n    nativeName,\n    languages,\n    flag,\n    currencies,\n  } = datos;\n\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n\n  const [bandera, guardarBandera] = useState(null);\n\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    console.log(flag);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"col-8 mb-4 mycard\" style={{ textAlign: \"center\" }}>\n        <div className=\"card border-dark\">\n          <div className=\"card-header\">\n            <h4>{name}</h4>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"card-text\">\n              <div className=\"\">\n                <p>\n                  Capital:<b> {capital} </b>{\" \"}\n                </p>\n                <p>\n                  Region:<b> {region} </b>{\" \"}\n                </p>\n                <p>\n                  Population:<b> {population} </b>{\" \"}\n                </p>\n                <p>\n                  NativeName:<b> {nativeName} </b>{\" \"}\n                </p>\n                <p>\n                  Languages:\n                  {languages.map((el) => (\n                    <b key={el.name}> {el.name} </b>\n                  ))}\n                </p>\n                <p>\n                  Currencies:\n                  {currencies.map((el) => (\n                    <b key={el.name}> {el.name} </b>\n                  ))}\n                </p>\n                <p>\n                  NativeName:<b> {nativeName} </b>{\" \"}\n                </p>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary btn-block\"\n                  onClick={() => {\n                    guardarBandera(flag);\n                    handleOpen();\n                  }}\n                >\n                  Show his flag\n                </button>\n                <Modal\n                  aria-labelledby=\"simple-modal-title\"\n                  aria-describedby=\"simple-modal-description\"\n                  open={open}\n                  onClose={() => {\n                    handleClose();\n                    guardarBandera(null);\n                  }}\n                >\n                  <div style={modalStyle} className={classes.paper}>\n                    <h2 id=\"simple-modal-title\">{name}</h2>\n                    <img className=\"img-fluid my-4\" src={bandera} />\n                  </div>\n                </Modal>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Card } from \"./Card\";\n\nexport default class Todos extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      resultados: [],\n      error: false,\n      clickado: \"\",\n    };\n\n    // Este enlace es necesario para hacer que `this` funcione en el callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  //   Ser montarÃ¡ antes de que renderizemos\n  componentWillMount() {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(\"Error\");\n        }\n        return response.json();\n      })\n      .then((resp) => {\n        // console.log(resp);\n        this.setState({ resultados: resp });\n      })\n      .catch((e) => {\n        // console.log(e);\n        this.setState((prevState) => ({\n          error: !prevState.error,\n        }));\n      });\n  }\n\n  handleClick(text, imagen) {\n    // console.log(\"Has hecho click en el elemento \" + text);\n    // console.log(imagen);\n    this.setState({ clickado: imagen });\n  }\n\n  render() {\n    const e = this.state;\n    if (e.resultados.length > 0) {\n      return (\n        <div className=\"container-fluid\">\n          {/* <p>{e.clickado}</p>\n          <img src={e.clickado} alt=\"\" /> */}\n          {e.resultados.map((el) => (\n            //   <Fragment>\n            //   <Card key={el.alpha3Code} onClick={() => this.handleClick(el.name)} />\n            // </Fragment>\n            <div\n              key={el.alpha3Code}\n              onClick={() => this.handleClick(el.name, el.flag)}\n            >\n              <Card datos={el} />\n            </div>\n          ))}\n        </div>\n      );\n    } else {\n      // Mientras no carge los datos de la APi...\n      //   Nos da un mensaje de Cargando / O uno de Error\n      return (\n        <p className=\"text-center\">\n          {this.state.error ? \"Something went wrong...\" : \"Loading data...\"}\n        </p>\n      );\n    }\n  }\n}\n","import React, { Fragment, useState, useEffect } from \"react\";\n\nimport { Titulos } from \"./components/Titulos\";\nimport Todos from \"./components/Todos\";\n\nfunction App() {\n  const url = \"https://jsonplaceholder.typicode.com/todos\";\n\n  const [todos, setTodos] = useState();\n\n  const fetchApi = async () => {\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setTodos(responseJSON);\n  };\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  return (\n    <Fragment>\n      <div className=\"MyApp\">\n        <h1 className=\"padding\">Countries API</h1>\n        <hr />\n        <h3>Load data from all countries. You can also see their flag.</h3>\n        <hr />\n        <Todos />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}