{"version":3,"sources":["components/Card.js","components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["Card","datos","name","capital","region","population","nativeName","languages","flag","currencies","className","style","textAlign","map","el","href","target","rel","Todos","props","state","resultados","error","clickado","handleClick","bind","fetch","then","response","ok","Error","json","resp","setState","catch","e","prevState","text","imagen","this","length","onClick","alpha3Code","Component","App","useState","setTodos","fetchApi","a","responseJSON","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a92449a4.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\n\nexport const Card = ({ datos }) => {\n  const {\n    name,\n    capital,\n    region,\n    population,\n    nativeName,\n    languages,\n    flag,\n    currencies,\n  } = datos;\n\n  return (\n    <Fragment>\n      <div className=\"col-8 mb-4 mycard\" style={{ textAlign: \"center\" }}>\n        <div className=\"card border-dark\">\n          <div className=\"card-header\">\n            <h4>{name}</h4>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"card-text\">\n              <div className=\"\">\n                <p>\n                  Capital:<b> {capital} </b>{\" \"}\n                </p>\n                <p>\n                  Region:<b> {region} </b>{\" \"}\n                </p>\n                <p>\n                  Population:<b> {population} </b>{\" \"}\n                </p>\n                <p>\n                  NativeName:<b> {nativeName} </b>{\" \"}\n                </p>\n                <p>\n                  Languages:\n                  {languages.map((el) => (\n                    <b key={el.name}> {el.name} </b>\n                  ))}\n                </p>\n                <p>\n                  Currencies:\n                  {currencies.map((el) => (\n                    <b key={el.name}> {el.name} </b>\n                  ))}\n                </p>\n                <p>\n                  NativeName:<b> {nativeName} </b>{\" \"}\n                </p>\n\n                <a\n                  href={flag}\n                  target=\"flag\"\n                  rel=\"noopener noreferrer\"\n                  className=\"btn btn-primary btn-block\"\n                >\n                  {\" \"}\n                  Look his flag\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Card } from \"./Card\";\n\nexport default class Todos extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      resultados: [],\n      error: false,\n      clickado: \"\",\n    };\n\n    // Este enlace es necesario para hacer que `this` funcione en el callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  //   Ser montará antes de que renderizemos\n  componentWillMount() {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(\"Error\");\n        }\n        return response.json();\n      })\n      .then((resp) => {\n        // console.log(resp);\n        this.setState({ resultados: resp });\n      })\n      .catch((e) => {\n        // console.log(e);\n        this.setState((prevState) => ({\n          error: !prevState.error,\n        }));\n      });\n  }\n\n  handleClick(text, imagen) {\n    // console.log(\"Has hecho click en el elemento \" + text);\n    // console.log(imagen);\n    this.setState({ clickado: imagen });\n  }\n\n  render() {\n    const e = this.state;\n    if (e.resultados.length > 0) {\n      return (\n        <div className=\"container-fluid\">\n          {/* <p>{e.clickado}</p>\n          <img src={e.clickado} alt=\"\" /> */}\n          {e.resultados.map((el) => (\n            //   <Fragment>\n            //   <Card key={el.alpha3Code} onClick={() => this.handleClick(el.name)} />\n            // </Fragment>\n            <div\n              key={el.alpha3Code}\n              onClick={() => this.handleClick(el.name, el.flag)}\n            >\n              <Card datos={el} />\n            </div>\n          ))}\n        </div>\n      );\n    } else {\n      // Mientras no carge los datos de la APi...\n      //   Nos da un mensaje de Cargando / O uno de Error\n      return (\n        <p className=\"text-center\">\n          {this.state.error ? \"Algo salió mal...\" : \"Cargando datos...\"}\n        </p>\n      );\n    }\n  }\n}\n","import React, { Fragment, useState, useEffect } from \"react\";\n\nimport { Titulos } from \"./components/Titulos\";\nimport Todos from \"./components/Todos\";\n\nfunction App() {\n  const url = \"https://jsonplaceholder.typicode.com/todos\";\n\n  const [todos, setTodos] = useState();\n\n  const fetchApi = async () => {\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setTodos(responseJSON);\n  };\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  return (\n    <Fragment>\n      <div className=\"MyApp\">\n        <h1 className=\"padding\">Countries API</h1>\n        <hr />\n        <h3>Load data from all countries. You can also see their flag.</h3>\n        <hr />\n        <Todos />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}